" editing options
set hidden
set tabstop=4 shiftwidth=4 expandtab
set nowrap
set laststatus=2 modeline
set incsearch hlsearch
set number
set wildmenu
set noswapfile
set showcmd

" enable filetype magic
syntax on
filetype on
filetype plugin on
filetype indent on

" configure fzf
let g:fzf_command_prefix="Fzf"

" configure jedi
let g:jedi#popup_on_dot             = 0
let g:jedi#completions_command      = "<C-Space>"
let g:jedi#documentation_command    = "K"
let g:jedi#goto_assignments_command = "<LEADER>pa"
let g:jedi#goto_command             = "<LEADER>pg"
let g:jedi#goto_definitions_command = "<LEADER>pd"
let g:jedi#rename_command           = "<LEADER>pr"
let g:jedi#usages_command           = "<LEADER>pu"

" configure syntastic
let g:syntastic_check_on_open    = 1
let g:syntastic_aggregate_errors = 1

" load plugins
runtime bundle/pathogen/autoload/pathogen.vim
silent! execute pathogen#infect()

" colors
if $TERM == "xterm-256color"
    set t_Co=256
    colorscheme landscape
    highlight StatusLine ctermfg=121 ctermbg=240
    highlight TabLineFill cterm=NONE
    highlight TabLineSel ctermfg=120
else
    set t_Co=16
    colorscheme murphy
    highlight Folded ctermfg=darkgray
endif

highlight warningmsg ctermbg=darkred

" leader key is hard to reach on mobile
set timeoutlen=2500

" editing .vimrc
nmap <LEADER>ce :edit $MYVIMRC<CR>
nmap <LEADER>cs :source $MYVIMRC<CR>

" buffer switching
nmap <LEADER>a :bprev<CR>
nmap <LEADER>s :bnext<CR>

nmap <LEADER>bw :bwipe<CR>

nmap <LEADER>s :grep -R <C-r><C-w> *<CR>:copen<CR>

nmap <LEADER>ff  :FzfFiles<CR>
nmap <LEADER>fg  :FzfGFiles<CR>
nmap <LEADER>fgg :FzfGFiles<CR>
nmap <LEADER>fgf :FzfGFiles<CR>
nmap <LEADER>fb  :FzfBuffers<CR>
nmap <LEADER>fbb :FzfBuffers<CR>
nmap <LEADER>fc  :FzfColors<CR>
nmap <LEADER>fl  :FzfLines<CR>
nmap <LEADER>fbl :FzfBLines<CR>
nmap <LEADER>ft  :FzfTags<CR>
nmap <LEADER>fbt :FzfBTags<CR>
nmap <LEADER>fm  :FzfMarks<CR>
nmap <LEADER>fw  :FzfWindows<CR>
nmap <LEADER>fw  :FzfWindows<CR>
nmap <LEADER>fh  :FzfHistory<CR>
nmap <LEADER>fhf :FzfHistory<CR>
nmap <LEADER>fh: :FzfHistory:<CR>
nmap <LEADER>fh/ :FzfHistory/<CR>
nmap <LEADER>fgc :FzfCommits<CR>
nmap <LEADER>fgb :FzfBCommits<CR>
nmap <LEADER>f:  :FzfCommands<CR>
nmap <LEADER>fm  :FzfMaps<CR>
nmap <LEADER>fH  :FzfHelptags<CR>
nmap <LEADER>fF  :FzfFiletypes<CR>

nmap <F5> :!./%<CR>
nmap <F6> :!pytest %<CR>

nmap <LEADER>gs :Gstatus<CR>
nmap <LEADER>gd :Gvdiff<CR>
nmap <LEADER>gc :Gcommit<CR>
nmap <LEADER>gp :Gpush<CR>
nmap <LEADER>gf :Gfetch -p<CR>
nmap <LEADER>gb :Gblame -s<CR>
nmap <LEADER>gb :Gblame<CR>

" statusline
let &statusline=""
    \. "[%n]%m%r%h%w"
    \. " %t"
    \. " %#warningmsg#%{SyntasticStatuslineFlag()}%*"
    \. "%=%y"
    \. " [%{&fileencoding}]"
    \. " [%{&fileformat}]"
    \. " [%{fugitive#head(7)}]"
    \. " U+%04.4B"
    \. " %v"
    \. " %l/%L"
    \. " %p%%"

" automatically remove trailing whitespace to make Git happy
augroup  trailing_whitespace
autocmd! trailing_whitespace
autocmd  trailing_whitespace BufRead  *.md   let b:preserve_trailing_ws=1
autocmd  trailing_whitespace BufRead  *.diff let b:preserve_trailing_ws=1
autocmd  trailing_whitespace BufWrite *      if !exists("b:preserve_trailing_ws")
                                             \ | let cursor = getpos(".")
                                             \ | %s/\s\+$//e
                                             \ | call setpos(".", cursor)
                                             \ | endif
augroup  end

" automatically remove trailing newlines to make Git happy
augroup  trailing_newlines
autocmd! trailing_newlines
autocmd  trailing_newlines BufRead  *.diff let b:preserve_trailing_nl=1
autocmd  trailing_newlines BufWrite *      if !exists("b:preserve_trailing_nl")
                                           \ | let cursor = getpos(".")
                                           \ | %s/\($\n\s*\)\+\%$//e
                                           \ | call setpos(".", cursor)
                                           \ | endif
augroup  end

augroup  c_folding
autocmd! c_folding
autocmd  c_folding BufRead *.c set foldmethod=syntax foldnestmax=1
augroup  end
