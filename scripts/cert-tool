#!/bin/bash 

case $1 in
    create-key)
        domain=${2?Domain missing}
        openssl genrsa -out ${domain}.key 2048
        chmod 600 ${domain}.key
        ;;
    create-ca-cert)
        domain=${2?Domain missing}
        openssl req -x509 -sha256 -new -nodes -key ${domain}.key -days 365 -out ${domain}.crt -subj /C=NL/CN=${domain}
        ;;
    create-csr)
        domain=${2?Domain missing}
        if [ -z "$3" ]; then
            openssl req -new -sha256 -key ${domain}.key -out ${domain}.csr -subj "/C=NL/CN=${domain/wildcard/*}"
        else
            conf=/tmp/cert-tool-req-$$.conf
            echo "[req]" > $conf
            echo "req_extensions=req_ext" >> $conf
            echo "distinguished_name=req_distinguished_name" >> $conf
            echo "prompt=no" >> $conf
            echo "[req_distinguished_name]" >> $conf
            echo "C=NL" >> $conf
            echo "CN=$domain" >> $conf
            echo "[req_ext]" >> $conf
            echo "subjectAltName=@alt_names" >> $conf
            echo "[alt_names]" >> $conf
            x=1; while [ $# -ge 2 ]; do echo "DNS.$[x++]=$2" >> $conf; shift; done
            cat $conf
            openssl req -new -sha256 -key ${domain}.key -out ${domain}.csr -config $conf
        fi
        ;;
    sign-cert)
        ca=${2?CA missing}
        domain=${3?Domain missing}
        openssl x509 -req -in ${domain}.csr -CA ${ca}.crt -CAkey ${ca}.key -CAcreateserial -CAserial ${ca}.srl -out ${domain}.crt -days 365
        ;;
    self-sign-cert)
        domain=${2?Domain missing}
        openssl x509 -req -days 3650 -in ${domain}.csr -signkey ${domain}.key -out ${domain}.crt
        ;;
    dump-csr)
        domain=${2?Domain missing}
        openssl req -text -noout -in ${domain}.csr
        ;;
    dump-cert)
        domain=${2?Domain missing}
        openssl x509 -in ${domain}.crt -noout -text
        ;;
    ca-cert-to-pfx)
        ca=${2?CA missing}
        openssl pkcs12 -export -out ${ca}.pfx -certfile ${ca}.crt -name ${ca} -passout pass:
        ;;
    cert-to-pfx)
        ca=${2?CA missing}
        domain=${3?Domain missing}
        openssl pkcs12 -export -out ${domain}.pfx -inkey ${domain}.key -in ${domain}.crt -certfile ${ca}.crt -name ${domain/wildcard/*} -passout pass:
        ;;
    create-ca)
        ca=${2?CA missing}
        $0 create-key $ca
        $0 create-ca-cert $ca
        $0 dump-cert $ca
        ;;
    create-domain)
        ca=${2?CA missing}
        domain=${3?Domain missing}
        $0 create-key $domain
        $0 create-csr $domain
        $0 sign-cert $ca $domain
        $0 cert-to-pfx $ca $domain
        $0 dump-cert $domain
        ;;
    create-domain-self-signed)
        domain=${2?Domain missing}
        $0 create-key $domain
        $0 create-csr $domain
        $0 self-sign-cert $domain
        $0 dump-cert $domain
        ;;
    dump-cert-bundle)
        bundle="${2?Bundle filename missing}"
        shift 2
        openssl crl2pkcs7 -nocrl -certfile CHAINED.pem | openssl pkcs7 -print_certs -text $*
        ;;
    *)
        echo "Usage: $0 [create-key|create-ca-cert|create-csr|sign-cert] ..."
        exit 1
        ;;
esac
