#!/bin/bash

# this script should be run once a month on the 26th:
# 26 gen key; 27 publish next; 28 activate next; 01 inactivate current, 02 delete current
# it will still work for months that are longer than february in non-leap years

: ${1?need a zone name}

if [ "$(id -un)" != named ]; then
    echo "error: need to run as user 'named' for zone $1" >&2
    exit 1
fi

if [ ! -d /var/named/keys/$1 ]; then
    echo "error: cannot find keys for zone $1" >&2
    exit 1
fi

# calculate days dates
cur_month=$(date +%Y%m)01
pub_date=$(date -d "$cur_month + 1 month - 2 day" +%Y%m%d)
act_date=$(date -d "$cur_month + 1 month - 1 day" +%Y%m%d)
ina_date=$(date -d "$cur_month + 1 month + 0 day" +%Y%m%d)
del_date=$(date -d "$cur_month + 1 month + 1 day" +%Y%m%d)

# find current key
old_key=$(dig +dnssec +noall +answer $1 SOA | awk '/RRSIG/{printf "K%s+%03d+%05d\n", $1, $6, $11}')

if [ -z "$old_key" ]; then
    echo "error: no RRSIG found for $1/SOA in DNS" 1>&2
    exit 2
fi

if [ ! -f "/var/named/keys/$1/$old_key.key" ]; then
    echo "error: can't find $old_key" 1>&2
    exit 3
fi

# check that this is a ZSK (256) and NOT a KSK (257)
if ! awk '/DNSKEY/{exit($4==256)?0:1}' "/var/named/keys/$1/$old_key.key"; then
    echo "PANIC! $old_key is not a ZSK" 1>&2
    exit 4
fi

# set inactivation and deletion dates for current key
echo "$1: setting $old_key to inactive $ina_date and delete $del_date"
dnssec-settime -K /var/named/keys/$1 -I $ina_date -D $del_date $old_key 1>/dev/null

# create a new key
# XXX: RSA is old, can I use newer crypto? --> not in Bind 9.13.2
new_key=$(dnssec-keygen -K /var/named/keys/$1 -a RSASHA256 -b 2048 -P $pub_date -A $act_date $1)
echo "$1: new key $new_key published on $pub_date and activated on $act_date"
